apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: tpcds-datagen-100g
  namespace: default
spec:
  type: Scala
  mode: cluster
  sparkVersion: 2.4.5-SNAPSHOT
  image: seedjeffwan/spark:2.4.5-SNAPSHOT-examples
  mainClass: com.amazonaws.eks.tpcds.DataGenTPCDS
  mainApplicationFile: local:///opt/spark/examples/jars/eks-spark-examples-assembly-1.0.jar
  arguments:
  # working directory to write data
    - "s3a://spark-k8s-data/TPCDS-TEST-100G"
  # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
  # Scale factor (in GB)
    - "100"
  # Generate data num partitions
    - "200"
  # Create the partitioned fact tables
    - "false"
  # Shuffle to get partitions coalesced into single files.
    - "false"
  # Logging set to WARN
    - "true"
  sparkConf:
    # For S3 writing, we need to disable speculation to have consistent writes
    "spark.speculation": "false"
    "spark.network.timeout": "2400"
    # S3 Credential
    "spark.hadoop.fs.s3a.aws.credentials.provider": "com.amazonaws.auth.InstanceProfileCredentialsProvider"
    # S3 Specific config (remove if s3 not used)
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    # S3A Committer
    "spark.hadoop.mapreduce.outputcommitter.factory.scheme.s3a": "org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory"
    "spark.hadoop.fs.s3a.committer.name": "directory"
    "spark.hadoop.fs.s3a.committer.staging.conflict-mode": "append"
    # Shuffle performance
    "spark.kubernetes.local.dirs.tmpfs": "true"
  driver:
    cores: 4
    coreLimit: "4096m"
    memory: "4000m"
    serviceAccount: spark
  executor:
    instances: 30
    cores: 2
    memory: "8000m"
    memoryOverhead: 2g
  restartPolicy:
    type: Never
