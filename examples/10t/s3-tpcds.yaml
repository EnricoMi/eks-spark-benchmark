apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: tpcds-benchmark-10t
  namespace: default
spec:
  type: Scala
  mode: cluster
  image: seedjeffwan/spark:2.4.5-SNAPSHOT-examples
  sparkVersion: 2.4.5-SNAPSHOT
  mainClass: com.amazonaws.eks.tpcds.BenchmarkSparkSQL
  mainApplicationFile: local:///opt/spark/examples/jars/eks-spark-examples-assembly-1.0.jar
  mode: cluster
  volumes:
    - name: "spark-local-dir-1"
      hostPath:
        path: "/tmp/spark-local-dir"
  arguments:
  # working directory where data table reside (must exists and have tables directly)
    - "s3a://spark-k8s-data/TPCDS-TEST-10T"
  # location to store results
    - "s3a://spark-k8s-data/TPCDS-TEST-10T-RESULT"
  # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
  # Scale factor (in GB)
    - "10000"
  # Number of iterations
    - "1"
  # Optimize queries
    - "false"
  # Filter queries, will run all if empty - "q23a-v2.4,q23b-v2.4"
    - ""
  # Logging set to WARN
    - "true"
  sparkConf:
    # Cloud specific - need to run with speculation to avoid strugglers
    "spark.speculation": "false"
    "spark.speculation.multiplier": "3"
    "spark.speculation.quantile": "0.9"
    # TPCDs Specific
    "spark.sql.broadcastTimeout": "7200"
    "spark.sql.crossJoin.enabled": "true"
    "spark.sql.parquet.mergeSchema": "false"
    "spark.sql.parquet.filterPushdown": "true"
    # S3 credential
    "spark.hadoop.fs.s3a.aws.credentials.provider": "com.amazonaws.auth.InstanceProfileCredentialsProvider"
    # S3 Specific config (remove if s3 not used)
    # We need it to speed up uploads, and outputcommiter/parquet to have consistent writes due to speculation
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    # S3A Committer
    "spark.hadoop.fs.s3a.committer.name": "directory"
    "spark.hadoop.fs.s3a.committer.staging.conflict-mode": "append"
    "spark.hadoop.mapreduce.outputcommitter.factory.scheme.s3a": "org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory"
    # History Server
    "spark.eventLog.enabled": "true"
    "spark.eventLog.dir": "s3a://spark-k8s-data/spark-history-server/"
  driver:
    cores: 6
    coreLimit: "6144m"
    memory: "8000m"
    serviceAccount: spark
    volumeMounts:
      - name: "spark-local-dir-1"
        mountPath: "/tmp/spark-local-dir"
  executor:
    instances: 45
    cores: 1
    memory: "8000m"
    memoryOverhead: "2g"
    volumeMounts:
      - name: "spark-local-dir-1"
        mountPath: "/tmp/spark-local-dir"
  restartPolicy:
    type: Never
